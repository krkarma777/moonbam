<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CommunityChatEnterOutMapper">


	<!-- 방 입장 시 insert 진행 -->
	<insert id="chatMemberInsertMap" parameterType="hashmap">
	
		insert into chatmember values (#{chatNum},#{userId},sysdate, 'f')
	
	</insert>
	
	
	<!-- 중복 insert를 하지 않기 위해 select 진행 -->
	<select id="chatMemberInsertForOnlyOneSelect" parameterType="hashmap" resultType="ChatMemberDTO">
	
		
		select * from chatmember where chatnum = #{chatNum} and userid = #{userId}
		
		
	</select>
	
	
	<!-- 방에 입장하기 위해 강퇴 여부 판단하기  -->
	<select id="chatMemberEnterSelect" parameterType="hashmap" resultType="ChatMemberDTO">
	
		
		select * from chatmember where chatnum = #{chatNum} and userid = #{userId} and isKicked = 'f'
		
		
	</select>
	
	
	
	
	<!-- chatNum 으로 방정보 가져오기 (방 입장시) -->
	<select id="chatRoomSelectById" parameterType="int" resultType="ChatRoomDTO">
	
		select * from chatroom where chatNum = #{chatNum}
	
	</select>
	
	
	<!-- 방 나가기  -->
	<delete id="chatMemberDeleteBychatNumAndUserId" parameterType="hashmap">
	
		delete from chatmember where userId =#{userId} and chatNum = #{chatNum}
	
	</delete>
	
	<!-- 방 입장 시 chatRoom 에서 인원 수 +1 하기 -->
	<update id="chatRoomCurrntNowAdd" parameterType="hashmap">
		update chatroom set currentNow = #{currntNow} where chatNum = #{chatNum}
	</update>
	
	
	<!-- 방장이 방 삭제시 chatmember delete  -->
	<delete id="chatMemberDeleteByChatNum" parameterType="int">
		delete from chatmember where chatNum = #{chatNum}
	</delete>
	
	<!-- 방장이 방 삭제 시 chatroom delete -->
	<delete id="chatRoomDeleteByChatNum" parameterType="int">
		delete from chatroom where chatNum = #{chatNum}
	</delete>
	
	
	
	
	
	
</mapper>
